import{A as t,d as s,l as r,E as e,k as i,h as o,j as a}from"./p-d7e83d64.js";import{d as n}from"./p-f67a156d.js";import{f as h}from"./p-4b404e74.js";import{i as c}from"./p-7e1544ef.js";import{A as m}from"./p-75af3351.js";
/**
 * @license
 * Copyright (c) Peculiar Ventures, LLC.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */class p extends t{constructor(t){var e;super(s(t),r),this.thumbprints={};const{acinfo:i}=this.asn;this.serialNumber=c.Convert.ToHex(i.serialNumber),this.version=i.version;const o=i.attrCertValidityPeriod.notBeforeTime;if(!o)throw new Error("Cannot get 'notBefore' value");this.notBefore=o;const a=i.attrCertValidityPeriod.notAfterTime;if(!a)throw new Error("Cannot get 'notAfter' value");this.notAfter=a,this.validity=n(this.notBefore,this.notAfter),this.issuer=i.issuer.v1Form||(null===(e=i.issuer.v2Form)||void 0===e?void 0:e.issuerName),this.holder=i.holder}get signature(){const{signatureValue:t,signatureAlgorithm:s}=this.asn;return{value:t,algorithm:s.algorithm}}parseExtensions(){const{acinfo:t}=this.asn;t.extensions&&(this.extensions=t.extensions.map(t=>new e(h.serialize(t))))}parseAttributes(){const{acinfo:t}=this.asn;t.attributes&&(this.attributes=t.attributes.map(t=>new m(h.serialize(t))))}async getThumbprint(t="SHA-1"){try{const s=await i(t,this.raw);this.thumbprints[t.name||t]=c.Convert.ToHex(s)}catch(s){console.error("Error thumbprint get:",s)}}exportAsBase64(){return c.Convert.ToBase64(this.raw)}exportAsHexFormatted(){return o(c.Convert.ToHex(this.raw))}exportAsPemFormatted(){return`-----BEGIN ATTRIBUTE CERTIFICATE-----\n${a(this.exportAsBase64())}\n-----END ATTRIBUTE CERTIFICATE-----`}get commonName(){return"attribute-certificate-"+this.thumbprints["SHA-1"]}}export{p as X}