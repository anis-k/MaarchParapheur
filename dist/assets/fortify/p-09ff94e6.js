import{A as t,d as s,m as r,e,E as i,l as o,j as a,k as n}from"./p-d1e2b384.js";import{d as h}from"./p-566511ea.js";import{f as c}from"./p-e1655586.js";import{A as m}from"./p-d748c8a1.js";
/**
 * @license
 * Copyright (c) Peculiar Ventures, LLC.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */class u extends t{constructor(t){var i;super(s(t),r),this.thumbprints={};const{acinfo:o}=this.asn;this.serialNumber=e.Convert.ToHex(o.serialNumber),this.version=o.version;const a=o.attrCertValidityPeriod.notBeforeTime;if(!a)throw new Error("Cannot get 'notBefore' value");this.notBefore=a;const n=o.attrCertValidityPeriod.notAfterTime;if(!n)throw new Error("Cannot get 'notAfter' value");this.notAfter=n,this.validity=h(this.notBefore,this.notAfter),this.issuer=o.issuer.v1Form||(null===(i=o.issuer.v2Form)||void 0===i?void 0:i.issuerName),this.holder=o.holder}get signature(){const{signatureValue:t,signatureAlgorithm:s}=this.asn;return{value:t,algorithm:s.algorithm}}parseExtensions(){const{acinfo:t}=this.asn;t.extensions&&(this.extensions=t.extensions.map(t=>new i(c.serialize(t))))}parseAttributes(){const{acinfo:t}=this.asn;t.attributes&&(this.attributes=t.attributes.map(t=>new m(c.serialize(t))))}async getThumbprint(t="SHA-1"){try{const s=await o(t,this.raw);this.thumbprints[t.name||t]=e.Convert.ToHex(s)}catch(s){console.error("Error thumbprint get:",s)}}exportAsBase64(){return e.Convert.ToBase64(this.raw)}exportAsHexFormatted(){return a(e.Convert.ToHex(this.raw))}exportAsPemFormatted(){return`-----BEGIN ATTRIBUTE CERTIFICATE-----\n${n(this.exportAsBase64())}\n-----END ATTRIBUTE CERTIFICATE-----`}get commonName(){return"attribute-certificate-"+this.thumbprints["SHA-1"]}}export{u as X}